plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'ac.su'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {url 'https://jitpack.io'}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'com.querydsl:querydsl-jpa:4.4.0'

    // Google Cloud Secret Manager 사용을 위한 의존성 추가 -t
//    implementation 'com.google.cloud:google-cloud-secretmanager:2.0.7'
    implementation 'com.google.cloud:spring-cloud-gcp-starter-storage:5.3.0'

    // Google Cloud Platform Storage 사용을 위한 의존성 추가


    // wild-mantle : 테스트를 위한 h2를 사용하기 위해 추가한 코드
    runtimeOnly 'com.h2database:h2'

    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation 'mysql:mysql-connector-java:8.0.33'

    // 결제모듈을 위한 의존성 추가
    // 아임포트 관련 //
    // https://mvnrepository.com/artifact/com.github.iamport/iamport-rest-client-java
    implementation group: 'com.github.iamport', name: 'iamport-rest-client-java', version: '0.2.23'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/adapter-rxjava2
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.11.0'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.11.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'


    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    implementation 'org.mybatis:mybatis:3.5.16'
    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20240303'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // jsp 문법 해석용 tag library (JSTL) 제공
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.0'
    // jsp -> servlet 변환
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    implementation 'javax.servlet:javax.servlet-api:4.0.1'

}
tasks.named('test') {
    useJUnitPlatform()
}
